openapi: 3.0.1
info:
  title: Auth API
  version: 1.0.0
paths:
  /auth/signup:
    post:
      tags:
        - authController
      summary: Some summary
      operationId: signup
      requestBody:
        description: "User registration details"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpUserRequest'
      responses:
        '200':
          description: returns new user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    post:
      tags:
        - authController
      summary: Some summary
      operationId: login
      requestBody:
        description: "User login details"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
      responses:
        '200':
          description: returns new user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
  /auth/users/{userId}:
    get:
      tags:
        - authController
      summary: Some summary
      operationId: userGET
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: returns the current user's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  schemas:
    User:
      type: object
      required:
        - name
        - lastName
        - gender
        - email
        - phone
        - birthDate
        - addresses
        - role
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        name:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum: [ male, female, other ]
        email:
          type: string
          format: email
        phone:
          type: string
          example: "+18-202-555-0173"
        birthDate:
          type: string
          format: date
        addresses:
          type: array
          items: { $ref: '#/components/schemas/Address' }
        role:
          type: string
          enum: [ USER, ADMIN ]
    SignUpUserRequest:
      allOf:
        - $ref: '#/components/schemas/User'  # Reuse the User schema
        - type: object
          properties:
            password:
              type: string
              description: "The user's password"
              minLength: 8
          required:
            - password
    LoginUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    LoginUserResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    Address:
      type: object
      required:
        - street
        - city
        - postalCode
        - country
      properties:
        id:
          type: integer
          format: int64
        isDefault:
          type: boolean
          default: false
        street:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string